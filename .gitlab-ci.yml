image: php:7.4.3

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - mysql:5.7

variables:
  MYSQL_ROOT_PASSWORD: secret
  MYSQL_DATABASE: food_service_db
  MYSQL_USER: homestead
  MYSQL_PASSWORD:  secret

stages:
  - build
  - test
  # TODO deploy stage

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  key:
    files:
      - composer.lock
  paths:
    - vendor/

before_script:
  # Update packages
  - apt-get update -yqq
  # Install dependencies
  - apt-get install git libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev -yqq
  # Install php extensions
  - docker-php-ext-install mbstring pdo_mysql curl json intl gd xml zip bz2 opcache
  # Install & enable Xdebug for code coverage reports
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  # Install Composer and project dependencies.
  - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

build_project:
  stage: build
  only:
    - merge_requests
  script:
    - composer install
    - cp .env.testing .env
    - php artisan key:generate
    - php artisan config:cache
    - php artisan migrate

test_project:
  stage: test
  only:
    - merge_requests
  script:
    - php vendor/bin/phpunit --coverage-text --colors=never
